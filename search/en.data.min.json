[{"id":0,"href":"/dishes-docs/usermanual/overview/","title":"1. 概述","parent":"用户手册","content":""},{"id":1,"href":"/dishes-docs/tutorial/yocto/","title":"Yocto 介绍","parent":"教程","content":""},{"id":2,"href":"/dishes-docs/quickstart/introduction/","title":"简介","parent":"入门","content":"    1. 项目特征 2. 依赖项目 3. 系统架构      1. 项目特征       一个物联网终端 OTA 管理平台\n  基于 Wireguard VPN 可实时保持与终端设备连接\n  基于 Docker 部署，安装简单\n  很容易被集成进 CI/CD 工具以及终端开发工具中\n  2. 依赖项目     上菜使用 Golang + Vue 前后端分离方案，其中后端基于 gin-admin脚手架开发，前端基于 vue-antd-admin脚手架开发。\n为了快速可靠的安装部署，上菜和相关依赖均运行于 Docker 容器之中\n3. 系统架构     整个系统主要由三部分组成: dishes-admin, dishes-client, dishes-agent. 其中 dishes-admin 为管理平台，运行于服务器中。dishes-client 运行于目标终端设备中，dishes-agent 为独立程序，方便 CI/CD 工具和开发工具集成\n"},{"id":3,"href":"/dishes-docs/quickstart/quickstart/","title":"快速开始","parent":"入门","content":"    1. 说明 2. 安装  2.1 安装准备 2.2 安装   3. 创建产品 4. 创建设备 5. 添加固件 6. 查看更新状态 7. 与 CI/CD 工具及开发工具配合使用      1. 说明     本文将从零开始，让您快速的部署上菜并更新一个 rauc升级包。\n本文主要目的是让您快速体验上菜，希望在短时间内，可以说服您这个项目对于终端 OTA 升级管理是有用的。\n详细的使用说明请参考后续文章，里面会更加详细的介绍上菜所有的功能以及您最好掌握的相关知识说明。\n2. 安装     2.1 安装准备     目前，上菜已经在 Windows (Win10 \u0026amp; Win11) 和 Linux (Ubuntu, Fedora, CentOS 8) 环境下完成测试。你可以选择你习惯的操作系统环境作为 Docker 主机， 请根据如下官方文档安装 Docker \u0026amp; Docker-Compose\ndocker 安装说明docker-compose 安装说明2.2 安装       下载项目\n$ git clone https://github.com/dianshao-embedded/dishes-admin.git \u0026amp;\u0026amp; cd ./dishes-client   Docker 镜像编译\n$ sudo docker-compose build 注意：Docker 构建默认使用国内镜像源\n  Docker 容器启动\n$ sudo docker-compose up   3. 创建产品       创建产品，产品为相同终端的集合\n  目前仅支持创建 Linux 类终端，RTOS 终端待开发\n  目前仅支持更新 rauc 升级包，swu 及其他升级包待开发\n  更新方式可选自动或者手动，自动和手动仅代表 PROD 固件是否自动更新\n  网络连接方式支持 http 和 mqtt， 目前只支持 http\n  4. 创建设备       完成产品创建后，点击每行右侧设备按钮进入设备界面\n  创建设备，输入序列号、设备名、选择终端阶段\n  终端阶段分为 dev, test, prod，其中 dev 阶段为研发人员开发阶段，test 阶段为测试阶段，prod 阶段为产品生产阶段，每个阶段的更新策略不同\n  目前仅支持 dev 阶段更新，其他两个阶段更新逻辑待开发\n  5. 添加固件       点击产品行右侧固件按钮，进入固件页面，在其中添加更新固件包\n  目前只支持 rauc 更新包，rauc 更新框架请参考 https://rauc.io/  需要选择固件版本号与阶段 (dev, test, prod)，会根据阶段自动更新该阶段所有终端\n  dev 阶段设备无需考虑版本号是否适配，直接更新\n  test 与 prod 终端则会检查版本号是否适配\n  6. 查看更新状态     上述添加更新包操作完成后，平台通知终端进行固件更新操作，终端更新完成后会显示更新状态\n7. 与 CI/CD 工具及开发工具配合使用     用户可以通过 dishes-agent 将上菜集成到 CI/CD 工具及开发工具中\n可以参考颠勺中如何集成，实现在开发平台中一键部署固件到终端\n"},{"id":4,"href":"/dishes-docs/tags/","title":"Tags","parent":"欢迎使用上菜","content":""},{"id":5,"href":"/dishes-docs/quickstart/","title":"入门","parent":"欢迎使用上菜","content":"本章节中将会用几分钟的时间带您感受上菜，包括部署及基本功能使用\n"},{"id":6,"href":"/dishes-docs/tutorial/","title":"教程","parent":"欢迎使用上菜","content":""},{"id":7,"href":"/dishes-docs/","title":"欢迎使用上菜","parent":"","content":"上菜是一个物联网终端 OTA 及远程连接管理平台，其提供固件自动更新及远程控制台连接功能，帮助嵌入式开发人员开发、管理、维护设备\n 使用手册   Github 仓库项目特点   自动化更新   上菜提供标准化的 OTA 更新流程，根据开发阶段可选择 Dev Test Prod 三个不同固件类型，上菜会根据不同类型自动执行终端更新操作  远程连接   针对 Linux 终端，上菜基于 Wireguard VPN 与终端保持连接，可实时通过 ssh 连接控制设备  可被集成   上菜可被集成进 CI/CD 工具 (Jenkins, GitLab CI/CD etc.) 以及开发工具中，实现从开发到部署一站式解决方案   "},{"id":8,"href":"/dishes-docs/usermanual/","title":"用户手册","parent":"欢迎使用上菜","content":""}]